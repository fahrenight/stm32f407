
#include "stm32f4xx.h"

extern uint32_t SystemCoreClock;
uint32_t systemClock;

void RCC_Config(void);
void GPIO_Config(void);

int main(void)
{
	RCC_Config();
	SystemCoreClockUpdate();
	systemClock = SystemCoreClock;

	GPIO_Config();
  while (1)
  {
	  GPIOD->ODR |= 1<<12;
  }
}

void RCC_Config(void){ //SELECT FREQUENCY AS 168 MHz
	RCC->CR &= ~(1<<0); //HSI OFF
	RCC->CR |= 1<<16; //HSE ON
	while(!(RCC->CR & ~(1<<17))); //Waiting HSE is ON
	RCC->CR |= 1<<19; //
	RCC->PLLCFGR = 0x00000000; //PLLCFGR Register reset
	RCC->PLLCFGR |= (1<<22); //PLLSRC is HSE
	RCC->PLLCFGR |= (4<<0); //PLL M = 4
	RCC->PLLCFGR |= (168<<6); // PLL N = 168

	RCC->CR |= (1<<24); // PLL ON
	while(!(RCC->CR & ~(1<<24))); // Wait PLL Activated

	RCC->CFGR &= ~(1<<0);
	RCC->CFGR |= (1<<1); // System Clock is PLL
	while(!(RCC->CFGR & ~(1<<1))); //Waiting for selected system clock is PLL Clock
}
void GPIO_Config(void){
	//RCC_AHB1ENR Register
	RCC->AHB1ENR |= 1<<3;

	//MODER Register
	GPIOD->MODER = 0x55000000; // 12,13,14,15th pins are output
	// OTYPER Register
	GPIOD->OTYPER = 0x00000000;
	//GPIOx_OSPEEDR Register
	GPIOD->OSPEEDR |= 0xFF000000;
	//GPIOx_PUPDR Register
	GPIOD->PUPDR = 0x00000000;

}
